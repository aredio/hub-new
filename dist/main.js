"use strict";
// Classe principal do Hub Financeiro
class HubFinanceiro {
    constructor() {
        this.functions = [];
        this.isDarkMode = true;
        this.themeToggle = null;
        this.themeIcon = null;
        this.themeText = null;
        console.log('HubFinanceiro: Inicializando...');
        this.initializeTheme();
        this.initializeFunctions();
        this.setupEventListeners();
        this.setupThemeToggle();
        this.addWelcomeMessage();
        this.initializeAnimations();
        console.log('HubFinanceiro: Inicializado com sucesso!');
    }
    // Inicializa o tema
    initializeTheme() {
        // Verifica se h√° prefer√™ncia salva no localStorage
        const savedTheme = localStorage.getItem('hub-financeiro-theme');
        if (savedTheme) {
            this.isDarkMode = savedTheme === 'dark';
        }
        else {
            // Verifica prefer√™ncia do sistema
            this.isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
        }
        this.applyTheme();
    }
    // Aplica o tema atual
    applyTheme() {
        const root = document.documentElement;
        if (this.isDarkMode) {
            root.classList.add('dark-theme');
            root.classList.remove('light-theme');
        }
        else {
            root.classList.add('light-theme');
            root.classList.remove('dark-theme');
        }
        // Salva a prefer√™ncia
        localStorage.setItem('hub-financeiro-theme', this.isDarkMode ? 'dark' : 'light');
    }
    // Configura o bot√£o de altern√¢ncia de tema
    setupThemeToggle() {
        this.themeToggle = document.getElementById('themeToggle');
        this.themeIcon = document.getElementById('themeIcon');
        this.themeText = document.getElementById('themeText');
        if (this.themeToggle && this.themeIcon && this.themeText) {
            this.updateThemeToggleUI();
            this.themeToggle.addEventListener('click', () => {
                this.toggleTheme();
            });
        }
    }
    // Alterna entre tema claro e escuro
    toggleTheme() {
        this.isDarkMode = !this.isDarkMode;
        this.applyTheme();
        this.updateThemeToggleUI();
        this.showNotification(`Tema ${this.isDarkMode ? 'escuro' : 'claro'} ativado`);
    }
    // Atualiza a interface do bot√£o de tema
    updateThemeToggleUI() {
        if (this.themeIcon && this.themeText) {
            if (this.isDarkMode) {
                this.themeIcon.textContent = 'üåô';
                this.themeText.textContent = 'Modo Escuro';
            }
            else {
                this.themeIcon.textContent = '‚òÄÔ∏è';
                this.themeText.textContent = 'Modo Claro';
            }
        }
    }
    // Inicializa anima√ß√µes
    initializeAnimations() {
        // Adiciona anima√ß√£o de entrada aos bot√µes
        const buttons = document.querySelectorAll('.button-container');
        buttons.forEach((button, index) => {
            button.style.animationDelay = `${index * 0.1}s`;
        });
    }
    // Inicializa as 8 fun√ß√µes financeiras
    initializeFunctions() {
        this.functions = [
            {
                id: 'renda-fixa',
                name: 'Simulador de Renda Fixa',
                description: 'Calcule rendimento real e l√≠quido de investimentos de renda fixa (CDB, LCI/LCA, Tesouro) com incid√™ncia de IR/IOF.',
                icon: 'üìä',
                action: () => this.openRendaFixa()
            },
            {
                id: 'alocacao',
                name: 'Calculadora de Aloca√ß√£o de Ativos',
                description: 'Capte seu perfil de investidor e receba sugest√µes de aloca√ß√£o personalizadas com question√°rio interativo.',
                icon: 'üéØ',
                action: () => this.openAlocacao()
            },
            {
                id: 'indicadores',
                name: 'Dashboard de Indicadores Econ√¥micos',
                description: 'Monitore Selic, CDI, IPCA, Ibovespa, USD/BRL com hist√≥rico e gr√°ficos em tempo real.',
                icon: 'üìà',
                action: () => this.openIndicadores()
            },
            {
                id: 'impostos-invest',
                name: 'Calculadora de Imposto sobre Investimentos',
                description: 'Calcule IR sobre investimentos, importe opera√ß√µes via CSV e gere relat√≥rios detalhados.',
                icon: 'üìã',
                action: () => this.openImpostosInvest()
            },
            {
                id: 'fundos',
                name: 'Comparador de Fundos e ETFs',
                description: 'Pesquise e compare fundos/ETFs com m√©tricas chave: CAGR, volatilidade, Sharpe e drawdown.',
                icon: 'üè¶',
                action: () => this.openFundos()
            },
            {
                id: 'quiz',
                name: 'Quiz de Educa√ß√£o Financeira',
                description: 'Gamifica√ß√£o do aprendizado financeiro com perguntas, n√≠veis, ranking e sistema de badges.',
                icon: 'üéì',
                action: () => this.openQuiz()
            },
            {
                id: 'emprestimo',
                name: 'Simulador de Empr√©stimos',
                description: 'Calcule parcelas, CET e impacto no or√ßamento com sistema Price e amortiza√ß√£o detalhada.',
                icon: 'üí∞',
                action: () => this.openEmprestimo()
            },
            {
                id: 'financiamento',
                name: 'Simulador de Financiamentos (SAC x PRICE)',
                description: 'Compare financiamento de im√≥vel/ve√≠culo entre sistemas SAC e PRICE com tabelas detalhadas.',
                icon: 'üè†',
                action: () => this.openFinanciamento()
            }
        ];
    }
    // Configura os event listeners para os bot√µes
    setupEventListeners() {
        console.log('HubFinanceiro: Configurando event listeners...');
        const buttons = document.querySelectorAll('.financial-button');
        console.log(`HubFinanceiro: Encontrados ${buttons.length} bot√µes`);
        buttons.forEach((button, index) => {
            const container = button.closest('.button-container');
            const functionId = container?.getAttribute('data-function');
            console.log(`Bot√£o ${index + 1}: functionId = ${functionId}`);
            if (functionId) {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log(`HubFinanceiro: Bot√£o clicado - ${functionId}`);
                    const func = this.functions.find(f => f.id === functionId);
                    if (func) {
                        console.log(`HubFinanceiro: Executando fun√ß√£o - ${func.name}`);
                        this.executeFunction(func);
                    }
                    else {
                        console.error(`HubFinanceiro: Fun√ß√£o n√£o encontrada - ${functionId}`);
                    }
                });
                // Adiciona efeito de hover com delay
                button.addEventListener('mouseenter', () => {
                    this.addHoverEffect(button);
                });
                button.addEventListener('mouseleave', () => {
                    this.removeHoverEffect(button);
                });
            }
        });
        console.log('HubFinanceiro: Event listeners configurados!');
    }
    // Executa uma fun√ß√£o financeira
    executeFunction(func) {
        console.log(`Executando fun√ß√£o: ${func.name}`);
        // Adiciona feedback visual
        this.showNotification(`Abrindo ${func.name}...`);
        // Executa a a√ß√£o espec√≠fica
        func.action();
    }
    // Adiciona efeito de hover
    addHoverEffect(button) {
        button.style.transform = 'translateY(-10px) scale(1.05)';
        button.style.transition = 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)';
    }
    // Remove efeito de hover
    removeHoverEffect(button) {
        button.style.transform = 'translateY(0) scale(1)';
    }
    // Mostra notifica√ß√£o
    showNotification(message) {
        // Remove notifica√ß√£o anterior se existir
        const existingNotification = document.querySelector('.notification');
        if (existingNotification) {
            existingNotification.remove();
        }
        // Cria nova notifica√ß√£o
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        document.body.appendChild(notification);
        // Remove ap√≥s 3 segundos
        setTimeout(() => {
            if (notification.parentNode) {
                notification.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }
        }, 3000);
    }
    // Adiciona mensagem de boas-vindas
    addWelcomeMessage() {
        const welcomeMessage = document.createElement('div');
        welcomeMessage.className = 'welcome-message';
        welcomeMessage.innerHTML = `
            <p>Bem-vindo ao Hub Financeiro! Passe o mouse sobre os bot√µes para ver as descri√ß√µes detalhadas.</p>
        `;
        const header = document.querySelector('header');
        if (header) {
            header.appendChild(welcomeMessage);
        }
    }
    // Fun√ß√µes espec√≠ficas para cada m√≥dulo financeiro
    openRendaFixa() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'renda-fixa.html';
        }, 200);
    }
    openAlocacao() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'alocacao.html';
        }, 200);
    }
    openIndicadores() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'indicadores.html';
        }, 200);
    }
    openImpostosInvest() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'impostos.html';
        }, 200);
    }
    openFundos() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'fundos.html';
        }, 200);
    }
    openQuiz() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'quiz.html';
        }, 200);
    }
    openEmprestimo() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'emprestimo.html';
        }, 200);
    }
    openFinanciamento() {
        // Adicionar efeito de transi√ß√£o suave
        this.addPageTransitionEffect();
        setTimeout(() => {
            window.location.href = 'financiamento.html';
        }, 200);
    }
    addPageTransitionEffect() {
        // Adicionar classe de transi√ß√£o ao container
        const container = document.querySelector('.container');
        if (container) {
            container.classList.add('page-transition');
        }
        // Adicionar efeito de fade out
        document.body.style.transition = 'opacity 0.2s ease-out';
        document.body.style.opacity = '0.8';
    }
    showComingSoon(functionName, pageName) {
        const confirmed = confirm(`${functionName}\n\nEsta funcionalidade est√° em desenvolvimento.\n\nDeseja ver os detalhes t√©cnicos?`);
        if (confirmed) {
            this.showTechnicalDetails(functionName);
        }
    }
    showTechnicalDetails(functionName) {
        let details = '';
        switch (functionName) {
            case 'Calculadora de Aloca√ß√£o de Ativos':
                details = 'üéØ Calculadora de Aloca√ß√£o de Ativos\n\nFuncionalidades:\n‚Ä¢ Question√°rio de perfil (10 perguntas)\n‚Ä¢ Classifica√ß√£o: Conservador/Moderado/Agressivo\n‚Ä¢ Sugest√µes de aloca√ß√£o personalizadas\n‚Ä¢ Ajuste manual com sliders\n‚Ä¢ Gr√°fico pizza interativo\n‚Ä¢ Explica√ß√£o textual da estrat√©gia\n\nComponentes:\n‚Ä¢ Questionnaire (10 perguntas)\n‚Ä¢ ResultAllocation (gr√°fico + explica√ß√£o)\n‚Ä¢ AdjustAllocation (sliders)\n\nEndpoint: POST /api/profile/assess';
                break;
            case 'Dashboard de Indicadores Econ√¥micos':
                details = 'üìà Dashboard de Indicadores Econ√¥micos\n\nFuncionalidades:\n‚Ä¢ Selic, CDI, IPCA, Ibovespa, USD/BRL\n‚Ä¢ Hist√≥rico com gr√°ficos temporais\n‚Ä¢ Atualiza√ß√£o autom√°tica (cron jobs)\n‚Ä¢ Cache em Redis\n‚Ä¢ M√∫ltiplas fontes de dados\n‚Ä¢ Per√≠odo seletor personalizado\n\nComponentes:\n‚Ä¢ DashboardHome (cards + mini-gr√°ficos)\n‚Ä¢ IndicatorDetail (gr√°fico temporal)\n\nEndpoints:\n‚Ä¢ GET /api/indicators\n‚Ä¢ GET /api/indicators/:symbol/history';
                break;
            case 'Calculadora de Imposto sobre Investimentos':
                details = 'üìã Calculadora de Imposto sobre Investimentos\n\nFuncionalidades:\n‚Ä¢ Importa√ß√£o de opera√ß√µes via CSV\n‚Ä¢ C√°lculo de IR por ativo e regime\n‚Ä¢ Offset de preju√≠zos (carry-forward)\n‚Ä¢ Relat√≥rios por ano e ativo\n‚Ä¢ Exporta√ß√£o CSV/PDF\n‚Ä¢ Template de importa√ß√£o\n\nComponentes:\n‚Ä¢ ImportOperations (CSV upload)\n‚Ä¢ TaxResult (resumo + relat√≥rios)\n\nEndpoint: POST /api/tax/calculate';
                break;
            case 'Comparador de Fundos e ETFs':
                details = 'üè¶ Comparador de Fundos e ETFs\n\nFuncionalidades:\n‚Ä¢ Pesquisa de fundos/ETFs\n‚Ä¢ Compara√ß√£o side-by-side\n‚Ä¢ M√©tricas: CAGR, volatilidade, Sharpe, drawdown\n‚Ä¢ Hist√≥rico de retornos\n‚Ä¢ Benchmark comparison\n‚Ä¢ An√°lise de taxas\n\nComponentes:\n‚Ä¢ SearchFund\n‚Ä¢ FundCard\n‚Ä¢ CompareView (side-by-side)\n‚Ä¢ FundDetail (hist√≥rico + m√©tricas)\n\nEndpoints:\n‚Ä¢ GET /api/funds\n‚Ä¢ POST /api/funds/compare';
                break;
            case 'Quiz de Educa√ß√£o Financeira (CPA-20)':
                details = 'üéì Quiz de Educa√ß√£o Financeira (CPA-20)\n\nFuncionalidades:\n‚Ä¢ Perguntas por t√≥pico e n√≠vel\n‚Ä¢ Timer por pergunta\n‚Ä¢ Sistema de pontua√ß√£o\n‚Ä¢ Badges e gamifica√ß√£o\n‚Ä¢ Ranking de usu√°rios\n‚Ä¢ Progresso personalizado\n\nComponentes:\n‚Ä¢ QuizHome\n‚Ä¢ QuestionView\n‚Ä¢ Scoreboard\n‚Ä¢ ProfileProgress\n\nEndpoints:\n‚Ä¢ GET /api/quiz/questions\n‚Ä¢ POST /api/quiz/submit\n‚Ä¢ GET /api/quiz/leaderboard';
                break;
            case 'Simulador de Empr√©stimos':
                details = 'üí∞ Simulador de Empr√©stimos\n\nFuncionalidades:\n‚Ä¢ C√°lculo de parcelas (Sistema Price)\n‚Ä¢ CET (Custo Efetivo Total)\n‚Ä¢ Tarifas: registro, origina√ß√£o\n‚Ä¢ Car√™ncia e amortiza√ß√µes extraordin√°rias\n‚Ä¢ Tabela de amortiza√ß√£o detalhada\n‚Ä¢ Gr√°fico de fluxo de caixa\n\nComponentes:\n‚Ä¢ LoanForm (inputs)\n‚Ä¢ LoanResult (parcela + CET + tabela)\n\nEndpoint: POST /api/loans/simulate\n\nF√≥rmula Price: A = P * i / (1 - (1+i)^-n)';
                break;
            case 'Simulador de Financiamentos (SAC x PRICE)':
                details = 'üè† Simulador de Financiamentos (SAC x PRICE)\n\nFuncionalidades:\n‚Ä¢ Compara√ß√£o SAC vs PRICE\n‚Ä¢ Financiamento im√≥vel/ve√≠culo\n‚Ä¢ Tabelas de amortiza√ß√£o lado a lado\n‚Ä¢ Total pago, total juros\n‚Ä¢ Evolu√ß√£o do saldo devedor\n‚Ä¢ Gr√°ficos comparativos\n\nComponentes:\n‚Ä¢ FinancingForm (inputs)\n‚Ä¢ CompareView (tabelas SAC/PRICE)\n\nEndpoint: POST /api/financing/simulate\n\nSAC: amortiza√ß√£o constante\nPRICE: parcela fixa';
                break;
        }
        alert(details);
    }
}
// Adiciona estilos CSS para anima√ß√µes
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @keyframes slideOutRight {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
`;
document.head.appendChild(style);
// Inicializa a aplica√ß√£o quando o DOM estiver carregado
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM carregado, inicializando HubFinanceiro...');
    new HubFinanceiro();
});
// Fallback caso o DOM j√° esteja carregado
if (document.readyState === 'loading') {
    console.log('DOM ainda carregando...');
}
else {
    console.log('DOM j√° carregado, inicializando HubFinanceiro imediatamente...');
    new HubFinanceiro();
}
// Exporta a classe para uso em outros m√≥dulos (se necess√°rio)
// export default HubFinanceiro;
//# sourceMappingURL=main.js.map